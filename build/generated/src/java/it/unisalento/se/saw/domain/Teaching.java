package it.unisalento.se.saw.domain;
// Generated 3-ago-2018 14.36.53 by Hibernate Tools 5.2.0.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Teaching generated by hbm2java
 */
@Entity
@Table(name="Teaching"
    ,catalog="mydb"
)
public class Teaching  implements java.io.Serializable {


     private TeachingId id;
     private Course course;
     private Professor professor;
     private String name;
     private Integer credits;
     private Integer year;
     private Set<Exam> exams = new HashSet<Exam>(0);
     private Set<Review> reviews = new HashSet<Review>(0);
     private Set<Lesson> lessons = new HashSet<Lesson>(0);
     private Set<Material> materials = new HashSet<Material>(0);

    public Teaching() {
    }

	
    public Teaching(TeachingId id, Course course, Professor professor) {
        this.id = id;
        this.course = course;
        this.professor = professor;
    }
    public Teaching(TeachingId id, Course course, Professor professor, String name, Integer credits, Integer year, Set<Exam> exams, Set<Review> reviews, Set<Lesson> lessons, Set<Material> materials) {
       this.id = id;
       this.course = course;
       this.professor = professor;
       this.name = name;
       this.credits = credits;
       this.year = year;
       this.exams = exams;
       this.reviews = reviews;
       this.lessons = lessons;
       this.materials = materials;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="idTeaching", column=@Column(name="idTeaching", nullable=false) ), 
        @AttributeOverride(name="courseIdCourse", column=@Column(name="Course_idCourse", nullable=false) ), 
        @AttributeOverride(name="professorIdProfessor", column=@Column(name="Professor_idProfessor", nullable=false) ), 
        @AttributeOverride(name="professorUserIdUser", column=@Column(name="Professor_User_idUser", nullable=false) ) } )
    public TeachingId getId() {
        return this.id;
    }
    
    public void setId(TeachingId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Course_idCourse", nullable=false, insertable=false, updatable=false)
    public Course getCourse() {
        return this.course;
    }
    
    public void setCourse(Course course) {
        this.course = course;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="Professor_idProfessor", referencedColumnName="idProfessor", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="Professor_User_idUser", referencedColumnName="User_idUser", nullable=false, insertable=false, updatable=false) } )
    public Professor getProfessor() {
        return this.professor;
    }
    
    public void setProfessor(Professor professor) {
        this.professor = professor;
    }

    
    @Column(name="name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="credits")
    public Integer getCredits() {
        return this.credits;
    }
    
    public void setCredits(Integer credits) {
        this.credits = credits;
    }

    
    @Column(name="year")
    public Integer getYear() {
        return this.year;
    }
    
    public void setYear(Integer year) {
        this.year = year;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="teaching")
    public Set<Exam> getExams() {
        return this.exams;
    }
    
    public void setExams(Set<Exam> exams) {
        this.exams = exams;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="teaching")
    public Set<Review> getReviews() {
        return this.reviews;
    }
    
    public void setReviews(Set<Review> reviews) {
        this.reviews = reviews;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="teaching")
    public Set<Lesson> getLessons() {
        return this.lessons;
    }
    
    public void setLessons(Set<Lesson> lessons) {
        this.lessons = lessons;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="teaching")
    public Set<Material> getMaterials() {
        return this.materials;
    }
    
    public void setMaterials(Set<Material> materials) {
        this.materials = materials;
    }




}


