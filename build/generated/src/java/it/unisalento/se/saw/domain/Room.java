package it.unisalento.se.saw.domain;
// Generated 3-ago-2018 14.36.53 by Hibernate Tools 5.2.0.Final


import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Room generated by hbm2java
 */
@Entity
@Table(name="Room"
    ,catalog="mydb"
)

@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Room  implements java.io.Serializable {


     private Integer idRoom;
     private Integer capacity;
     private String location;
     private String name;
     private String latitude;
     private String longitude;
     @JsonBackReference
     private Set<Segnalation> segnalations = new HashSet<Segnalation>(0);
    @JsonBackReference
     private Set<Accessory> accessories = new HashSet<Accessory>(0);
    @JsonBackReference
     private Set<Exam> exams = new HashSet<Exam>(0);
    @JsonBackReference
     private Set<Lesson> lessons = new HashSet<Lesson>(0);

    public Room() {
    }

    public Room(Integer capacity, String location, String name, String latitude, String longitude, Set<Segnalation> segnalations, Set<Accessory> accessories, Set<Exam> exams, Set<Lesson> lessons) {
       this.capacity = capacity;
       this.location = location;
       this.name = name;
       this.latitude = latitude;
       this.longitude = longitude;
       this.segnalations = segnalations;
       this.accessories = accessories;
       this.exams = exams;
       this.lessons = lessons;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idRoom", unique=true, nullable=false)
    public Integer getIdRoom() {
        return this.idRoom;
    }
    
    public void setIdRoom(Integer idRoom) {
        this.idRoom = idRoom;
    }

    
    @Column(name="capacity")
    public Integer getCapacity() {
        return this.capacity;
    }
    
    public void setCapacity(Integer capacity) {
        this.capacity = capacity;
    }

    
    @Column(name="location", length=45)
    public String getLocation() {
        return this.location;
    }
    
    public void setLocation(String location) {
        this.location = location;
    }

    
    @Column(name="name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="latitude", length=45)
    public String getLatitude() {
        return this.latitude;
    }
    
    public void setLatitude(String latitude) {
        this.latitude = latitude;
    }

    
    @Column(name="longitude", length=45)
    public String getLongitude() {
        return this.longitude;
    }
    
    public void setLongitude(String longitude) {
        this.longitude = longitude;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="room")
    public Set<Segnalation> getSegnalations() {
        return this.segnalations;
    }
    
    public void setSegnalations(Set<Segnalation> segnalations) {
        this.segnalations = segnalations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="room")
    public Set<Accessory> getAccessories() {
        return this.accessories;
    }
    
    public void setAccessories(Set<Accessory> accessories) {
        this.accessories = accessories;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="room")
    public Set<Exam> getExams() {
        return this.exams;
    }
    
    public void setExams(Set<Exam> exams) {
        this.exams = exams;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="room")
    public Set<Lesson> getLessons() {
        return this.lessons;
    }
    
    public void setLessons(Set<Lesson> lessons) {
        this.lessons = lessons;
    }




}


