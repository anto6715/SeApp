package it.unisalento.se.saw.domain;
// Generated 29-lug-2018 10.15.06 by Hibernate Tools 5.2.0.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Room generated by hbm2java
 */
@Entity
@Table(name="Room"
    ,catalog="mydb"
)
public class Room  implements java.io.Serializable {


     private RoomId id;
     private Exam exam;
     private String capacity;
     private String location;
     private String name;
     private Set<Segnalation> segnalations = new HashSet<Segnalation>(0);
     private Set<Accessory> accessories = new HashSet<Accessory>(0);
     private Set<Lesson> lessons = new HashSet<Lesson>(0);

    public Room() {
    }

	
    public Room(RoomId id, Exam exam) {
        this.id = id;
        this.exam = exam;
    }
    public Room(RoomId id, Exam exam, String capacity, String location, String name, Set<Segnalation> segnalations, Set<Accessory> accessories, Set<Lesson> lessons) {
       this.id = id;
       this.exam = exam;
       this.capacity = capacity;
       this.location = location;
       this.name = name;
       this.segnalations = segnalations;
       this.accessories = accessories;
       this.lessons = lessons;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="idRoom", column=@Column(name="idRoom", nullable=false) ), 
        @AttributeOverride(name="examIdExam", column=@Column(name="Exam_idExam", nullable=false) ), 
        @AttributeOverride(name="examTeachingIdTeaching", column=@Column(name="Exam_Teaching_idTeaching", nullable=false) ), 
        @AttributeOverride(name="examTeachingCourseIdCourse", column=@Column(name="Exam_Teaching_Course_idCourse", nullable=false) ), 
        @AttributeOverride(name="examTeachingProfessorIdProfessor", column=@Column(name="Exam_Teaching_Professor_idProfessor", nullable=false) ), 
        @AttributeOverride(name="examTeachingProfessorUserIdUser", column=@Column(name="Exam_Teaching_Professor_User_idUser", nullable=false) ) } )
    public RoomId getId() {
        return this.id;
    }
    
    public void setId(RoomId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="Exam_idExam", referencedColumnName="idExam", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="Exam_Teaching_idTeaching", referencedColumnName="Teaching_idTeaching", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="Exam_Teaching_Course_idCourse", referencedColumnName="Teaching_Course_idCourse", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="Exam_Teaching_Professor_idProfessor", referencedColumnName="Teaching_Professor_idProfessor", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="Exam_Teaching_Professor_User_idUser", referencedColumnName="Teaching_Professor_User_idUser", nullable=false, insertable=false, updatable=false) } )
    public Exam getExam() {
        return this.exam;
    }
    
    public void setExam(Exam exam) {
        this.exam = exam;
    }

    
    @Column(name="capacity", length=45)
    public String getCapacity() {
        return this.capacity;
    }
    
    public void setCapacity(String capacity) {
        this.capacity = capacity;
    }

    
    @Column(name="location", length=45)
    public String getLocation() {
        return this.location;
    }
    
    public void setLocation(String location) {
        this.location = location;
    }

    
    @Column(name="name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="room")
    public Set<Segnalation> getSegnalations() {
        return this.segnalations;
    }
    
    public void setSegnalations(Set<Segnalation> segnalations) {
        this.segnalations = segnalations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="room")
    public Set<Accessory> getAccessories() {
        return this.accessories;
    }
    
    public void setAccessories(Set<Accessory> accessories) {
        this.accessories = accessories;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="Lesson_has_Room", catalog="mydb", joinColumns = { 
        @JoinColumn(name="Room_idRoom", nullable=false, updatable=false), 
        @JoinColumn(name="Room_Exam_idExam", nullable=false, updatable=false), 
        @JoinColumn(name="Room_Exam_Teaching_idTeaching", nullable=false, updatable=false), 
        @JoinColumn(name="Room_Exam_Teaching_Course_idCourse", nullable=false, updatable=false), 
        @JoinColumn(name="Room_Exam_Teaching_Professor_idProfessor", nullable=false, updatable=false), 
        @JoinColumn(name="Room_Exam_Teaching_Professor_User_idUser", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="Lesson_idLesson", nullable=false, updatable=false) })
    public Set<Lesson> getLessons() {
        return this.lessons;
    }
    
    public void setLessons(Set<Lesson> lessons) {
        this.lessons = lessons;
    }




}


